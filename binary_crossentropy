import pandas as pd
import tensorflow as tf
from keras.models import Sequential
from keras.layers import Dense
from google.colab import files
uploaded = files.upload()
import io
df = pd.read_csv(io.BytesIO(uploaded['ionosphere.data']),header=None) #creating a dataset df
df[34] = df[34].map({'g': 1, 'b': 0}) #mapping the 34th column of the dataset from 'g' and 'b' to 1 and 0 respectively
df1 = df.iloc[:, :-1]
df_train=df1.iloc[:246,:]
df_train_y=df.iloc[:246,34]
df_test=df1.iloc[247:,:]
df_test_y=df.iloc[247:,34]
model=Sequential() #defining keras model
model.add(Dense(20, input_dim=34, activation='relu'))
model.add(Dense(10, activation='relu'))
model.add(Dense(5, activation='relu'))
model.add(Dense(1, activation='sigmoid'))
model.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])#Compiling the model
model.fit(df_train, df_train_y, epochs=200, batch_size=5)#fitting the keras model on the dataset
_, accuracy=model.evaluate(df_train, df_train_y)#evaluate the model
print('Accuracy: %.2f'% (accuracy*100))
predictions=model.predict(df_test)#make probability predictions with the model
rounded=[round(x[0]) for x in predictions] #round-off predictions
print('expected ==> predictions')
for i in range(247,351):
  print(df_test_y[i],"==>",rounded[i-247])
